apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow.fullname" . }}-web
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "airflow.name" . }}-web
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
        app: {{ template "airflow.name" . }}-web
        release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
        configmap.fabric8.io/update-on-change: "{{ template "airflow.fullname" . }}-env"
      labels:
        app: {{ template "airflow.name" . }}-web
        release: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: "init-airflow"
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: {{ .Values.airflow.image.pull_policy }}
        volumeMounts:
          - name: airflow-config
            mountPath: /usr/local/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-init
            mountPath: /usr/local/init-airflow.sh
            subPath: init-airflow.sh
        envFrom:
          - configMapRef:
              name: {{ template "airflow.fullname" . }}-env
          - secretRef:
              name: {{ template "airflow.fullname" . }}-env
        command:
          - "bash"
        args:
          - "-cx"
          - "bash /usr/local/init-airflow.sh"
      {{- if .Values.airflow.dags.persistence.enabled }}
      - name: "init-dags"
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: {{ .Values.airflow.image.pull_policy }}
        volumeMounts:
          - name: init-dags
            mountPath: /usr/local/init-dags.sh
            subPath: init-dags.sh
          - name: airflow-config
            mountPath: /usr/local/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-dags
            mountPath: /usr/local/airflow/dags
        envFrom:
          - configMapRef:
              name: {{ template "airflow.fullname" . }}-env
        command:
          - "bash"
        args:
          - "-cx"
          - "bash /usr/local/init-dags.sh"
      {{- end }}
      containers:
      {{- if not .Values.airflow.dags.persistence.enabled }}
      - name : git-sync
        image: k8s.gcr.io/git-sync:v3.1.5
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: airflow-dags
            mountPath: /git
          {{- if .Values.airflow.dags.git.enable_ssh}}
          - name: ssh-key
            mountPath: /var/ssh
            readOnly: true
          - name: known-hosts
            mountPath: /var/knownhosts
          {{- end}}
        env:
          - name: GIT_SYNC_REPO
            value: {{ .Values.airflow.dags.git.url }}
          - name: GIT_SYNC_BRANCH
            value: {{ .Values.airflow.dags.git.branch }}
          - name: GIT_SYNC_ROOT
            value: /git
          - name: GIT_SYNC_DEST
            value: repo
          {{- if .Values.airflow.dags.git.wait }}
          - name: GIT_SYNC_WAIT
            value: "{{ .Values.airflow.dags.git.wait }}"
          {{ end }}
          {{- if .Values.airflow.dags.git.enable_ssh }}
          - name: GIT_SYNC_SSH
            value: "true"
          - name: GIT_SSH_KEY_FILE
            value: /var/ssh/sshkey
          - name: GIT_SSH_KNOWN_HOSTS_FILE
            value: /var/knownhosts/known_hosts
          {{- else if .Values.airflow.dags.git.username }}
          - name: GIT_SYNC_USERNAME
            valueFrom:
              secretKeyRef:
                name: git
                key: GIT_SYNC_USERNAME
          - name: GIT_SYNC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: git
                key: GIT_SYNC_PASSWORD
          {{ end }}
      {{- end }}
      - name: webserver
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: {{ .Values.airflow.image.pull_policy }}
        ports:
          - name: webserver
            containerPort: 8080
        args: ["webserver"]
        volumeMounts:
          - name: airflow-config
            mountPath: /usr/local/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-dags
            mountPath: /usr/local/airflow/dags
          - name: airflow-logs
            mountPath: /usr/local/airflow/logs
            {{- if .Values.airflow.dags.git.enable_ssh }}
          - name: ssh-key
            mountPath: /var/ssh
          - name: known-hosts
            mountPath: /var/knownhosts
            {{- end }}
        envFrom:
          - configMapRef:
              name: {{ template "airflow.fullname" . }}-env
          - secretRef:
              name: {{ template "airflow.fullname" . }}-env
        env:
        - name: AIRFLOW_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 5
          httpGet:
            path: /health
            port: 8080
        livenessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
      volumes:
      - name: airflow-init
        configMap:
          name: {{ template "airflow.fullname" . }}-init
      - name: airflow-config
        configMap:
          name: {{ template "airflow.fullname" . }}-config
      {{- if .Values.airflow.dags.persistence.enabled}}
      - name: init-dags
        configMap:
          name: {{ template "airflow.fullname" . }}-init-dags
      {{- end }}
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: {{ if .Values.airflow.logs.persistence.existingClaim }}{{ .Values.airflow.logs.persistence.existingClaim }}{{- else }}{{ template "airflow.fullname" . }}-logs{{- end }}
      - name: airflow-dags
        {{- if .Values.airflow.dags.persistence.enabled }}
        persistentVolumeClaim:
          {{- if .Values.airflow.dags.persistence.existingClaim }}
          claimName: "{{ .Values.airflow.dags.persistence.existingClaim }}"
          {{- else }}
          claimName: {{ template "airflow.fullname" . }}-dags
          {{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.airflow.dags.git.enable_ssh}}
      - name: ssh-key
        secret:
          secretName: git
          items:
            - key: gitSshKey
              path: sshkey
          defaultMode: 0400
      - name: known-hosts
        configMap:
          name: {{ template "airflow.fullname" . }}-config
          items:
            - key: known_hosts
              path: known_hosts
      {{- end}}